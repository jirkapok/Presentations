using AutoFixture;

namespace Autogenerated_TestData;

// TODO test cases:
// * Generate complex structures
// * Generate collections
// * Work with date time
// * Customize fixture for generic data creations
// * Generate service structures with Mocks


public class InitializeComplexData
{
    [Test]
    public void Test1_Simplified()
    {
        var person = new Person("Karel", "Vokurka", DateTime.Today, Guid.NewGuid());

        Assert.That(person.FullName, Is.Not.Null.Or.Empty);
    }

    [Test]
    public void Test1_Autogenerated()
    {
        var person = new Fixture().Create<Person>();

        Assert.That(person.FullName, Is.Not.Null.Or.Empty);
    }

    [Test]
    public void Test1_Autogenerated_Customized()
    {
        var person = new Fixture().Build<Person>()
            .With(p => p.FirstName, "Karel")
            .With(p => p.LastName, "Vokurka")
            .Create();

        Assert.That(person.FullName, Is.EqualTo("Karel Vokurka"));
    }
}

public class Person(string firstName, string lastName, DateTime birthDate, Guid id)
{
    public Guid Id { get; set; } = id;
    public string FirstName { get; set; } = firstName;
    public string LastName { get; set; } = lastName;
    public DateTime BirthDate { get; set; } = birthDate;
    // and tons of other properties

    public string FullName => $"{FirstName} {LastName}";
}