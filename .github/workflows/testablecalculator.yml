name: Testable calculator

on:
  push:
    branches: [ "master" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  CI:

    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest

    env:
      Solution_Name: TestableCalculator\Solved\Calculator.sln 
      Test_Project_Path: TestableCalculator\Solved\Tests\Tests.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.1

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    # Execute all unit tests in the solution
    - name: Build
      run: dotnet build $env:Solution_Name

    - name: Test
      run: dotnet test $env:Test_Project_Path --logger "trx;logfilename=testResults.trx"
      
    - name: Test Report
      uses: dorny/test-reporter@v1.6.0
      if: success() || failure()    # run this step even if previous step failed
      with:
        name: MSTests
        path: TestableCalculator/Solved/Tests/TestResults/testResults.trx
        fail-on-error: 'false' # sincet the localdb tests configuration
        reporter: dotnet-trx 
